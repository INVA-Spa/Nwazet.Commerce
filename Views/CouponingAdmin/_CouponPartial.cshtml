@using Orchard.ContentManagement
@using Orchard.Utility.Extensions

@model Nwazet.Commerce.ViewModels.Couponing.Coupon
@Html.ValidationSummary()

<div class="form-group">
    @Html.LabelFor(m => m.Name, T("Name").Text, new { @for = Html.FieldIdFor(m => m.Name) })
    @Html.TextBoxFor(m => m.Name, new { @class = "form-control text medium", id = Html.FieldIdFor(m => m.Name), aria_describedby = "couponNameHelp", placeholder = T("Coupon's name") })
    <small id="couponNameHelp" class="form-text text-muted hint">@T("The coupon's name.")</small>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Code, T("Code").Text, new { @for = Html.FieldIdFor(m => m.Code) })
    @Html.TextBoxFor(m => m.Code, new { @class = "form-control text medium", id = Html.FieldIdFor(m => m.Code), aria_describedby = "couponCodeHelp", placeholder = T("Coupon's unique code") })
    <small id="couponCodeHelp" class="form-text text-muted hint">@T("The coupon's code.")</small>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Value, T("Value/Amount").Text, new { @for = Html.FieldIdFor(m => m.Value) })
    @Html.TextBoxFor(m => m.Value, new { @type = "number", @class = "form-control text small", step = "0.01", min = "0", id = Html.FieldIdFor(m => m.Value), aria_describedby = "couponValueHelp", placeholder = T("Coupon's value") })
    <small id="couponValueHelp" class="form-text text-muted hint">@T("The coupon's value/amount.")</small>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.CouponType, T("Value type").Text, new { @for = Html.FieldIdFor(m => m.CouponType) })
    @Html.DropDownListFor(m => m.CouponType, new SelectList(Enum.GetValues(typeof(Nwazet.Commerce.Models.Couponing.CouponType))), T("Select a type").Text, new { @class = "form-control text medium", id = Html.FieldIdFor(m => m.CouponType), aria_describedby = "couponTypeHelp" })
    <small id="couponTypeHelp" class="form-text text-muted hint">@T("The coupon's value type.")</small>
</div>
<div class="form-check">
    @Html.CheckBoxFor(m => m.Published, new { id = Html.FieldIdFor(m => m.Published), @class = "form-check-input" })
    @Html.LabelFor(m => m.Published, T("Is published and active").Text, new { @for = Html.FieldIdFor(m => m.Published), @class = "form-check-label forcheckbox" })
    <small id="couponTypeHelp" class="form-text text-muted hint">@T("Check to activate the coupon.")</small>
</div>
<button type="submit" name="submit.Save" class="btn btn-primary" value="submit.Save">@T("Save")</button>

