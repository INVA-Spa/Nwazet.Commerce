@using Nwazet.Commerce.Models
@{
    var method = (SizeBasedShippingMethodPart)Model.ShippingMethod;
    var shippingAreas = (IEnumerable<ShippingArea>)Model.ShippingAreas;
    var includedAreas = new HashSet<string>((method.IncludedShippingAreas ?? "").Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries));
    var excludedAreas = new HashSet<string>((method.ExcludedShippingAreas ?? "").Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries));
}
<fieldset>
    <label class="sub" for="@Html.Id("Name")">@T("Method Name")</label><br />
    @Html.TextBox("Name", method.Name, new { @class = "text" })<br />
    <span class="hint">@T("The technical name of the shipping method (this is different from the title, which is the method's friendly name that will be displayed to end-users).")</span><br/>
    <label class="sub" for="@Html.Id("ShippingCompany")">@T("Shipping Company")</label><br />
    @Html.TextBox("ShippingCompany", method.ShippingCompany, new { @class = "text" })<br />
    <label class="sub" for="@Html.Id("Price")">@T("Price")</label><br />
    @Html.TextBox("Price", method.Price, new { @class = "text" })<br />
    <label class="sub" for="@Html.Id("Size")">@T("Size")</label><br />
    @Html.TextBox("Size", method.Size, new { @class = "text" })<br />
    <label class="sub" for="@Html.Id("Priority")">@T("Priority")</label><br />
    @Html.TextBox("Priority", method.Priority, new { @class = "text" })<br />
    <span class="hint">@T("Specify the size (usually S, M, L or XL) for which this shipping price is valid. Any product that matches this size will trigger the shipping method, unless another of higher priority takes precedence. Leave empty to define the default size-based shipping method.")</span><br/>
</fieldset>